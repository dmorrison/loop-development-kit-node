syntax = "proto3";
package proto;
option go_package = ".;proto";

import "google/protobuf/empty.proto";

service Storage {
    // Check in storage to determine if a key has a value
    rpc StorageHasKey(StorageHasKeyRequest) returns (StorageHasKeyResponse);

    // Get a list of storage keys
    rpc StorageKeys(google.protobuf.Empty) returns (StorageKeysResponse);

    // Read the value of a specific storage key
    rpc StorageRead(StorageReadRequest) returns (StorageReadResponse);

    // Get all storage keys and values
    rpc StorageReadAll(google.protobuf.Empty) returns (StorageReadAllResponse);

    // Delete the value of a specific key
    rpc StorageDelete(StorageDeleteRequest) returns (google.protobuf.Empty);

    // Delete the values of all keys
    rpc StorageDeleteAll(google.protobuf.Empty) returns (google.protobuf.Empty);

    // Write the value of a key to storage
    rpc StorageWrite(StorageWriteRequest) returns (google.protobuf.Empty);
}

message StorageHasKeyRequest {
    string key = 1;
}

message StorageHasKeyResponse {
    bool hasKey = 1;
}

message StorageKeysResponse {
    repeated string keys = 1;
}

message StorageReadRequest {
    string key = 1;
}

message StorageReadResponse {
    string value = 1;
}

message StorageReadAllResponse {
    map<string, string> entries = 1;
}

message StorageDeleteRequest {
    string key = 1;
}

message StorageWriteRequest {
    string key = 1;
    string value = 2;
}
