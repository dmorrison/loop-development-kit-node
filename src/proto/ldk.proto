syntax = "proto3";
package proto;

message Empty {}

message Source {
    string id = 1;
    enum Category {
        UNKNOWN = 0;
        SENSOR = 1;
        CONTROLLER = 2;
        INTELLIGENCE = 3;
        SIDEKICK = 4;
    }
    Category category = 2;
    string name = 3;
    string author = 4;
    string organization = 5;
    string version = 6;
}

message Style {
    string backgroundColor = 1;
    string primaryColor = 2;
    string highlightColor = 3;
}

message Whisper {
    string label = 1;
    string markdown = 2;
    string icon = 3;
    Style style = 4;
}

message StartRequest {
    uint32 host = 1;
}

message OnEventRequest {
    map<string, string> data = 1;
    Source source = 2;
}

message EmitWhisperRequest {
    Whisper whisper = 1;
}

message EmitWhisperResponse {
    string id = 1;
}

message UpdateWhisperRequest {
    Whisper whisper = 1;
    string id = 2;
}

message EmitEventRequest {
    map<string, string> data = 1;
}

message StorageDeleteRequest {
    string key = 1;
}

message StorageHasKeyRequest {
    string key = 1;
}

message StorageHasKeyResponse {
    bool hasKey = 1;
}

message StorageKeysResponse {
    repeated string keys = 1;
}

message StorageReadRequest {
    string key = 1;
}

message StorageReadResponse {
    string value = 1;
}

message StorageReadAllResponse {
    map<string, string> entries = 1;
}

message StorageWriteRequest {
    string key = 1;
    string value = 2;
}

service Controller {
    rpc Start(StartRequest) returns (Empty);
    rpc Stop(Empty) returns (Empty);
    rpc OnEvent(OnEventRequest) returns (Empty);
}

service Sensor {
    rpc Start(StartRequest) returns (Empty);
    rpc Stop(Empty) returns (Empty);
    rpc OnEvent(OnEventRequest) returns (Empty);
}

service ControllerHost {
    rpc EmitWhisper(EmitWhisperRequest) returns (EmitWhisperResponse);
    rpc StorageDelete(StorageDeleteRequest) returns (Empty);
    rpc StorageDeleteAll(Empty) returns (Empty);
	rpc StorageHasKey(StorageHasKeyRequest) returns (StorageHasKeyResponse);
	rpc StorageKeys(Empty) returns (StorageKeysResponse);
	rpc StorageRead(StorageReadRequest) returns (StorageReadResponse);
	rpc StorageReadAll(Empty) returns (StorageReadAllResponse);
	rpc StorageWrite(StorageWriteRequest) returns (Empty);
    rpc UpdateWhisper(UpdateWhisperRequest) returns (Empty);
}

service SensorHost {
    rpc EmitEvent(EmitEventRequest) returns (Empty);
    rpc StorageDelete(StorageDeleteRequest) returns (Empty);
    rpc StorageDeleteAll(Empty) returns (Empty);
	rpc StorageHasKey(StorageHasKeyRequest) returns (StorageHasKeyResponse);
	rpc StorageKeys(Empty) returns (StorageKeysResponse);
	rpc StorageRead(StorageReadRequest) returns (StorageReadResponse);
	rpc StorageReadAll(Empty) returns (StorageReadAllResponse);
	rpc StorageWrite(StorageWriteRequest) returns (Empty);
}
