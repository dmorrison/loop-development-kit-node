var typedoc = typedoc || {}; typedoc.search = typedoc.search || {}; typedoc.search.data = {"kinds":{"4":"Enumeration","16":"Enumeration member","32":"Variable","64":"Function","128":"Class","256":"Interface","512":"Constructor","1024":"Property","2048":"Method","65536":"Type literal","9999999":"Page"},"rows":[{"id":0,"kind":4,"name":"Access","url":"enums/access.html","classes":"tsd-kind-enum"},{"id":1,"kind":16,"name":"UNKNOWN","url":"enums/access.html#unknown","classes":"tsd-kind-enum-member tsd-parent-kind-enum","parent":"Access","pagesPluginParent":"Access."},{"id":2,"kind":16,"name":"USER","url":"enums/access.html#user","classes":"tsd-kind-enum-member tsd-parent-kind-enum","parent":"Access","pagesPluginParent":"Access."},{"id":3,"kind":16,"name":"ORGANIZATION","url":"enums/access.html#organization","classes":"tsd-kind-enum-member tsd-parent-kind-enum","parent":"Access","pagesPluginParent":"Access."},{"id":4,"kind":16,"name":"PUBLIC","url":"enums/access.html#public","classes":"tsd-kind-enum-member tsd-parent-kind-enum","parent":"Access","pagesPluginParent":"Access."},{"id":5,"kind":4,"name":"Category","url":"enums/category.html","classes":"tsd-kind-enum"},{"id":6,"kind":16,"name":"CONTROLLER","url":"enums/category.html#controller","classes":"tsd-kind-enum-member tsd-parent-kind-enum","parent":"Category","pagesPluginParent":"Category."},{"id":7,"kind":16,"name":"INTELLIGENCE","url":"enums/category.html#intelligence","classes":"tsd-kind-enum-member tsd-parent-kind-enum","parent":"Category","pagesPluginParent":"Category."},{"id":8,"kind":16,"name":"SENSOR","url":"enums/category.html#sensor","classes":"tsd-kind-enum-member tsd-parent-kind-enum","parent":"Category","pagesPluginParent":"Category."},{"id":9,"kind":16,"name":"SIDEKICK","url":"enums/category.html#sidekick","classes":"tsd-kind-enum-member tsd-parent-kind-enum","parent":"Category","pagesPluginParent":"Category."},{"id":10,"kind":16,"name":"UNKNOWN","url":"enums/category.html#unknown","classes":"tsd-kind-enum-member tsd-parent-kind-enum","parent":"Category","pagesPluginParent":"Category."},{"id":11,"kind":32,"name":"categories","url":"globals.html#categories","classes":"tsd-kind-variable"},{"id":12,"kind":256,"name":"PluginEvent","url":"interfaces/pluginevent.html","classes":"tsd-kind-interface"},{"id":13,"kind":1024,"name":"data","url":"interfaces/pluginevent.html#data","classes":"tsd-kind-property tsd-parent-kind-interface","parent":"PluginEvent","pagesPluginParent":"PluginEvent."},{"id":14,"kind":65536,"name":"__type","url":"interfaces/pluginevent.html#data.__type","classes":"tsd-kind-type-literal tsd-parent-kind-property","parent":"PluginEvent.data","pagesPluginParent":"PluginEvent.data."},{"id":15,"kind":256,"name":"WhisperStyle","url":"interfaces/whisperstyle.html","classes":"tsd-kind-interface"},{"id":16,"kind":1024,"name":"backgroundColor","url":"interfaces/whisperstyle.html#backgroundcolor","classes":"tsd-kind-property tsd-parent-kind-interface","parent":"WhisperStyle","pagesPluginParent":"WhisperStyle."},{"id":17,"kind":1024,"name":"highlightColor","url":"interfaces/whisperstyle.html#highlightcolor","classes":"tsd-kind-property tsd-parent-kind-interface","parent":"WhisperStyle","pagesPluginParent":"WhisperStyle."},{"id":18,"kind":1024,"name":"primaryColor","url":"interfaces/whisperstyle.html#primarycolor","classes":"tsd-kind-property tsd-parent-kind-interface","parent":"WhisperStyle","pagesPluginParent":"WhisperStyle."},{"id":19,"kind":256,"name":"Whisper","url":"interfaces/whisper.html","classes":"tsd-kind-interface"},{"id":20,"kind":1024,"name":"markdown","url":"interfaces/whisper.html#markdown","classes":"tsd-kind-property tsd-parent-kind-interface","parent":"Whisper","pagesPluginParent":"Whisper."},{"id":21,"kind":1024,"name":"icon","url":"interfaces/whisper.html#icon","classes":"tsd-kind-property tsd-parent-kind-interface","parent":"Whisper","pagesPluginParent":"Whisper."},{"id":22,"kind":1024,"name":"label","url":"interfaces/whisper.html#label","classes":"tsd-kind-property tsd-parent-kind-interface","parent":"Whisper","pagesPluginParent":"Whisper."},{"id":23,"kind":1024,"name":"style","url":"interfaces/whisper.html#style","classes":"tsd-kind-property tsd-parent-kind-interface","parent":"Whisper","pagesPluginParent":"Whisper."},{"id":24,"kind":256,"name":"PluginHost","url":"interfaces/pluginhost.html","classes":"tsd-kind-interface"},{"id":25,"kind":2048,"name":"storageDelete","url":"interfaces/pluginhost.html#storagedelete","classes":"tsd-kind-method tsd-parent-kind-interface","parent":"PluginHost","pagesPluginParent":"PluginHost."},{"id":26,"kind":2048,"name":"storageDeleteAll","url":"interfaces/pluginhost.html#storagedeleteall","classes":"tsd-kind-method tsd-parent-kind-interface","parent":"PluginHost","pagesPluginParent":"PluginHost."},{"id":27,"kind":2048,"name":"storageHasKey","url":"interfaces/pluginhost.html#storagehaskey","classes":"tsd-kind-method tsd-parent-kind-interface","parent":"PluginHost","pagesPluginParent":"PluginHost."},{"id":28,"kind":2048,"name":"storageKeys","url":"interfaces/pluginhost.html#storagekeys","classes":"tsd-kind-method tsd-parent-kind-interface","parent":"PluginHost","pagesPluginParent":"PluginHost."},{"id":29,"kind":2048,"name":"storageRead","url":"interfaces/pluginhost.html#storageread","classes":"tsd-kind-method tsd-parent-kind-interface","parent":"PluginHost","pagesPluginParent":"PluginHost."},{"id":30,"kind":2048,"name":"storageReadAll","url":"interfaces/pluginhost.html#storagereadall","classes":"tsd-kind-method tsd-parent-kind-interface","parent":"PluginHost","pagesPluginParent":"PluginHost."},{"id":31,"kind":2048,"name":"storageWrite","url":"interfaces/pluginhost.html#storagewrite","classes":"tsd-kind-method tsd-parent-kind-interface","parent":"PluginHost","pagesPluginParent":"PluginHost."},{"id":32,"kind":256,"name":"ControllerHost","url":"interfaces/controllerhost.html","classes":"tsd-kind-interface"},{"id":33,"kind":2048,"name":"emitWhisper","url":"interfaces/controllerhost.html#emitwhisper","classes":"tsd-kind-method tsd-parent-kind-interface","parent":"ControllerHost","pagesPluginParent":"ControllerHost."},{"id":34,"kind":2048,"name":"storageDelete","url":"interfaces/controllerhost.html#storagedelete","classes":"tsd-kind-method tsd-parent-kind-interface tsd-is-inherited","parent":"ControllerHost","pagesPluginParent":"ControllerHost."},{"id":35,"kind":2048,"name":"storageDeleteAll","url":"interfaces/controllerhost.html#storagedeleteall","classes":"tsd-kind-method tsd-parent-kind-interface tsd-is-inherited","parent":"ControllerHost","pagesPluginParent":"ControllerHost."},{"id":36,"kind":2048,"name":"storageHasKey","url":"interfaces/controllerhost.html#storagehaskey","classes":"tsd-kind-method tsd-parent-kind-interface tsd-is-inherited","parent":"ControllerHost","pagesPluginParent":"ControllerHost."},{"id":37,"kind":2048,"name":"storageKeys","url":"interfaces/controllerhost.html#storagekeys","classes":"tsd-kind-method tsd-parent-kind-interface tsd-is-inherited","parent":"ControllerHost","pagesPluginParent":"ControllerHost."},{"id":38,"kind":2048,"name":"storageRead","url":"interfaces/controllerhost.html#storageread","classes":"tsd-kind-method tsd-parent-kind-interface tsd-is-inherited","parent":"ControllerHost","pagesPluginParent":"ControllerHost."},{"id":39,"kind":2048,"name":"storageReadAll","url":"interfaces/controllerhost.html#storagereadall","classes":"tsd-kind-method tsd-parent-kind-interface tsd-is-inherited","parent":"ControllerHost","pagesPluginParent":"ControllerHost."},{"id":40,"kind":2048,"name":"storageWrite","url":"interfaces/controllerhost.html#storagewrite","classes":"tsd-kind-method tsd-parent-kind-interface tsd-is-inherited","parent":"ControllerHost","pagesPluginParent":"ControllerHost."},{"id":41,"kind":256,"name":"Controller","url":"interfaces/controller.html","classes":"tsd-kind-interface"},{"id":42,"kind":2048,"name":"start","url":"interfaces/controller.html#start","classes":"tsd-kind-method tsd-parent-kind-interface","parent":"Controller","pagesPluginParent":"Controller."},{"id":43,"kind":2048,"name":"stop","url":"interfaces/controller.html#stop","classes":"tsd-kind-method tsd-parent-kind-interface","parent":"Controller","pagesPluginParent":"Controller."},{"id":44,"kind":2048,"name":"onEvent","url":"interfaces/controller.html#onevent","classes":"tsd-kind-method tsd-parent-kind-interface","parent":"Controller","pagesPluginParent":"Controller."},{"id":45,"kind":32,"name":"errMissingRequiredKey","url":"globals.html#errmissingrequiredkey","classes":"tsd-kind-variable"},{"id":46,"kind":32,"name":"errMissingRequiredValue","url":"globals.html#errmissingrequiredvalue","classes":"tsd-kind-variable"},{"id":47,"kind":128,"name":"Logger","url":"classes/logger.html","classes":"tsd-kind-class"},{"id":48,"kind":512,"name":"constructor","url":"classes/logger.html#constructor","classes":"tsd-kind-constructor tsd-parent-kind-class","parent":"Logger","pagesPluginParent":"Logger."},{"id":49,"kind":2048,"name":"with","url":"classes/logger.html#with","classes":"tsd-kind-method tsd-parent-kind-class","parent":"Logger","pagesPluginParent":"Logger."},{"id":50,"kind":2048,"name":"trace","url":"classes/logger.html#trace","classes":"tsd-kind-method tsd-parent-kind-class","parent":"Logger","pagesPluginParent":"Logger."},{"id":51,"kind":2048,"name":"debug","url":"classes/logger.html#debug","classes":"tsd-kind-method tsd-parent-kind-class","parent":"Logger","pagesPluginParent":"Logger."},{"id":52,"kind":2048,"name":"info","url":"classes/logger.html#info","classes":"tsd-kind-method tsd-parent-kind-class","parent":"Logger","pagesPluginParent":"Logger."},{"id":53,"kind":2048,"name":"warn","url":"classes/logger.html#warn","classes":"tsd-kind-method tsd-parent-kind-class","parent":"Logger","pagesPluginParent":"Logger."},{"id":54,"kind":2048,"name":"error","url":"classes/logger.html#error","classes":"tsd-kind-method tsd-parent-kind-class","parent":"Logger","pagesPluginParent":"Logger."},{"id":55,"kind":128,"name":"ControllerPlugin","url":"classes/controllerplugin.html","classes":"tsd-kind-class"},{"id":56,"kind":512,"name":"constructor","url":"classes/controllerplugin.html#constructor","classes":"tsd-kind-constructor tsd-parent-kind-class","parent":"ControllerPlugin","pagesPluginParent":"ControllerPlugin."},{"id":57,"kind":2048,"name":"serve","url":"classes/controllerplugin.html#serve","classes":"tsd-kind-method tsd-parent-kind-class","parent":"ControllerPlugin","pagesPluginParent":"ControllerPlugin."},{"id":58,"kind":4,"name":"OperatingSystem","url":"enums/operatingsystem.html","classes":"tsd-kind-enum"},{"id":59,"kind":16,"name":"UNKNOWN","url":"enums/operatingsystem.html#unknown","classes":"tsd-kind-enum-member tsd-parent-kind-enum","parent":"OperatingSystem","pagesPluginParent":"OperatingSystem."},{"id":60,"kind":16,"name":"WINDOWS","url":"enums/operatingsystem.html#windows","classes":"tsd-kind-enum-member tsd-parent-kind-enum","parent":"OperatingSystem","pagesPluginParent":"OperatingSystem."},{"id":61,"kind":16,"name":"MACOS","url":"enums/operatingsystem.html#macos","classes":"tsd-kind-enum-member tsd-parent-kind-enum","parent":"OperatingSystem","pagesPluginParent":"OperatingSystem."},{"id":62,"kind":16,"name":"LINUX","url":"enums/operatingsystem.html#linux","classes":"tsd-kind-enum-member tsd-parent-kind-enum","parent":"OperatingSystem","pagesPluginParent":"OperatingSystem."},{"id":63,"kind":16,"name":"ANY","url":"enums/operatingsystem.html#any","classes":"tsd-kind-enum-member tsd-parent-kind-enum","parent":"OperatingSystem","pagesPluginParent":"OperatingSystem."},{"id":64,"kind":256,"name":"SensorHost","url":"interfaces/sensorhost.html","classes":"tsd-kind-interface"},{"id":65,"kind":2048,"name":"emitEvent","url":"interfaces/sensorhost.html#emitevent","classes":"tsd-kind-method tsd-parent-kind-interface","parent":"SensorHost","pagesPluginParent":"SensorHost."},{"id":66,"kind":2048,"name":"storageDelete","url":"interfaces/sensorhost.html#storagedelete","classes":"tsd-kind-method tsd-parent-kind-interface tsd-is-inherited","parent":"SensorHost","pagesPluginParent":"SensorHost."},{"id":67,"kind":2048,"name":"storageDeleteAll","url":"interfaces/sensorhost.html#storagedeleteall","classes":"tsd-kind-method tsd-parent-kind-interface tsd-is-inherited","parent":"SensorHost","pagesPluginParent":"SensorHost."},{"id":68,"kind":2048,"name":"storageHasKey","url":"interfaces/sensorhost.html#storagehaskey","classes":"tsd-kind-method tsd-parent-kind-interface tsd-is-inherited","parent":"SensorHost","pagesPluginParent":"SensorHost."},{"id":69,"kind":2048,"name":"storageKeys","url":"interfaces/sensorhost.html#storagekeys","classes":"tsd-kind-method tsd-parent-kind-interface tsd-is-inherited","parent":"SensorHost","pagesPluginParent":"SensorHost."},{"id":70,"kind":2048,"name":"storageRead","url":"interfaces/sensorhost.html#storageread","classes":"tsd-kind-method tsd-parent-kind-interface tsd-is-inherited","parent":"SensorHost","pagesPluginParent":"SensorHost."},{"id":71,"kind":2048,"name":"storageReadAll","url":"interfaces/sensorhost.html#storagereadall","classes":"tsd-kind-method tsd-parent-kind-interface tsd-is-inherited","parent":"SensorHost","pagesPluginParent":"SensorHost."},{"id":72,"kind":2048,"name":"storageWrite","url":"interfaces/sensorhost.html#storagewrite","classes":"tsd-kind-method tsd-parent-kind-interface tsd-is-inherited","parent":"SensorHost","pagesPluginParent":"SensorHost."},{"id":73,"kind":256,"name":"Sensor","url":"interfaces/sensor.html","classes":"tsd-kind-interface"},{"id":74,"kind":2048,"name":"start","url":"interfaces/sensor.html#start","classes":"tsd-kind-method tsd-parent-kind-interface","parent":"Sensor","pagesPluginParent":"Sensor."},{"id":75,"kind":2048,"name":"stop","url":"interfaces/sensor.html#stop","classes":"tsd-kind-method tsd-parent-kind-interface","parent":"Sensor","pagesPluginParent":"Sensor."},{"id":76,"kind":2048,"name":"onEvent","url":"interfaces/sensor.html#onevent","classes":"tsd-kind-method tsd-parent-kind-interface","parent":"Sensor","pagesPluginParent":"Sensor."},{"id":77,"kind":128,"name":"SensorPlugin","url":"classes/sensorplugin.html","classes":"tsd-kind-class"},{"id":78,"kind":512,"name":"constructor","url":"classes/sensorplugin.html#constructor","classes":"tsd-kind-constructor tsd-parent-kind-class","parent":"SensorPlugin","pagesPluginParent":"SensorPlugin."},{"id":79,"kind":2048,"name":"serve","url":"classes/sensorplugin.html#serve","classes":"tsd-kind-method tsd-parent-kind-class","parent":"SensorPlugin","pagesPluginParent":"SensorPlugin."},{"id":80,"kind":64,"name":"serveControllerPlugin","url":"globals.html#servecontrollerplugin","classes":"tsd-kind-function"},{"id":81,"kind":64,"name":"serveSensorPlugin","url":"globals.html#servesensorplugin","classes":"tsd-kind-function"},{"id":82,"kind":1,"name":"Controllers","url":"pages/Concepts/controller.html","classes":"tsd-kind-page","pagesPluginContent":"# Controllers\n\nControllers receive events and use them to generate relevant whispers. Controllers choose which events they want to use and which they want to ignore.\n\n## Class\n\nWriting a Controller plugin boils down to writing a class with the following methods.\n\n```javascript\nclass Controller {\n  start(host, metadata) {}\n  stop() {}\n  onEvent() {\n}\n```\n\n**Start** - The Controller should wait to start operating until this is called. The provided `ControllerHost` should be stored in memory for continued use.\n\n**Stop** - The Controller should stop operating when this is called.\n\n**OnEvent** - The controller can use this to handle events that are broadcast by Sensors. Controllers do not need to emit events in a 1:1 relationship with events. Controllers may not use events at all. Controllers may only use some events. Controllers may keep a history of events and only emit whispers when several conditions are met.\n\n## Lifecycle\n\n1. Sidekick executes plugin process\n1. Sidekick calls `Start`, sending the host connection information to the plugin. This connection information is used to create the `ControllerHost`. The `ControllerHost` interface allows the plugin to emit whispers.\n1. On Controller wanting to emit a whisper, the Controller calls the `EmitWhisper` method on the host interface.\n1. On Sensor event, Sidekick calls `OnEvent`, passing the event from the Sensor to the Controller. These events can be ignored or used at the Controller's choice.\n1. On User disabling the Controller, Sidekick calls `Stop` then sends `sigterm` to the process.\n1. On Sidekick shutdown, Sidekick calls `Stop` then sends `sigterm` to the process.\n","pagesPluginParent":"Concepts / "},{"id":83,"kind":1,"name":"Logging","url":"pages/Concepts/logging.html","classes":"tsd-kind-page","pagesPluginContent":"# Logging\n\nTo make it easier to integrate with Sidekick's logger, a `Logger` class is provided to you in this library.\n\nExample usage:\n\n```javascript\nconst { Logger } = require('ldk');\n\nconst logger = new Logger('my-plugin-name');\n\n// ...\n\nlogger.info('Some message');\n// {\"@timestamp\":\"2020-07-30T14:58:21.057000Z\",\"@pid\":1234,\"@level\":\"INFO\",\"@module\":\"my-plugin-name\",\"@message\":\"Some message\"}\n\nlogger.info('Another message', 'someKey', 'someValue', 'anotherKey', 'anotherValue');\n// {\"@timestamp\":\"2020-07-30T14:58:21.057000Z\",\"@pid\":1234,\"@level\":\"INFO\",\"@module\":\"my-plugin-name\",\"@message\":\"Another message\",\"anotherKey\":\"anotherValue\",\"someKey\":\"someValue\"}\n\nconst logger2 = logger.with('persistentKey', 'persistentValue');\nlogger2.info('Yet another message', 'yetAnotherKey', 'yetAnotherValue');\n// {\"@timestamp\":\"2020-07-30T14:58:21.057000Z\",\"@pid\":1234,\"@level\":\"INFO\",\"@module\":\"my-plugin-name\",\"@message\":\"Yet another message\",\"persistentKey\":\"persistentValue\",\"yetAnotherKey\":\"yetAnotherValue\"}\n```\n\nThe logger is generally modeled off of [hclog](https://github.com/hashicorp/go-hclog).\n\nSo the `trace`/`debug`/`info`/`warn`/`error` methods expect a message as the first arg, with key/value pairs for the rest of the args.\n","pagesPluginParent":"Concepts / "},{"id":84,"kind":1,"name":"Storage","url":"pages/Concepts/storage.html","classes":"tsd-kind-page","pagesPluginContent":"# Storage\n\nThe host object provided to the plugin through `Start` provides the plugin with methods it can use for storing information.\n\n## Applications\n\n* Storing credentials provided by the user.\n* Keeping track of data across restarts.\n\n## Documentation\n\nIn order for a plugin to use storage, the plugin must first provide Sidekick with documentation. This is accomplished by including a new file `storage.json` with your plugin. The following is example documentation for a single entry.\n\n```json\n{\n \"period\": {\n   \"name\": \"Period\",\n   \"description\": \"The time the sensor waits between sending example events\"\n  }\n}\n```\n\n*NOTE* If the plugin attempts to access a key that is not documented, the request will be rejected.\n\n## Methods\n\nA method for removing the value of a key.\n\n```javascript\nstorageDelete(key) => Promise\n```\n\nA method for removing the values of all documented keys.\n\n```javascript\nstorageDeleteAll() => Promise\n```\n\nA method for checking if a value has been set for a key.\n\n```javascript\nstorageHasKey(key) => Promise\n```\n\nA method for listing all documented keys.\n\n```javascript\nstorageKeys() => Promise\n```\n\nA method for getting the value of a key.\n\n```javascript\nstorageRead(key) => Promise\n```\n\nA method for getting the values of all documented keys.\n\n```javascript\nstorageReadAll() => Promise\n```\n\nA method for setting the value of a key.\n\n```javascript\nstorageWrite(key, value) => Promise\n```\n","pagesPluginParent":"Concepts / "},{"id":85,"kind":1,"name":"Sensors","url":"pages/Concepts/sensor.html","classes":"tsd-kind-page","pagesPluginContent":"# Sensors\n\nA Sensor is a type of plugin that generates events.  Events can be as simple as a chunk of text but allow for complicated information. Sensors do not choose which controllers get their events. They are simply emitting the events. The decision about which events to use is left to the controller.\n\n## Class\n\nWriting a Sensor plugin boils down to writing a class with the following methods.\n\n```javascript\nclass Sensor {\n  start(host, metadata) {}\n  stop() {}\n  onEvent() {\n}\n```\n\n**Start** - The Sensor should wait to start operating until this is called. The provided `SensorHost` should be stored in memory for continued use.\n\n**Stop** - The Sensor should stop operating when this is called.\n\n**OnEvent** - The sensor can use this to handle events from the Sidekick UI. Many sensors will not care about UI events, and in that case the function should just return `nil`.\n\n## Lifecycle\n\n1. Sidekick executes plugin process\n1. Sidekick calls `Start`, sending the host connection information to the plugin. This connection information is used to create the `SensorHost`. The `SensorHost` interface allows the plugin to emit events.\n1. On Sensor wanting to emit an event, the Sensor calls the `EmitEvent` method on the host interface.\n1. On Sidekick UI event, Sidekick calls `OnEvent`, passing the event to the Sensor. These events can be ignore or used at the Sensor's choice.\n1. On User disabling the Sensor, Sidekick calls `Stop` then sends `sigterm` to the process.\n1. On Sidekick shutdown, Sidekick calls `Stop` then sends `sigterm` to the process.\n","pagesPluginParent":"Concepts / "},{"id":86,"kind":1,"name":"Terminology","url":"pages/Concepts/terminology.html","classes":"tsd-kind-page","pagesPluginContent":"# Terminology\n\n## Loop\nA concept that describes how Intelligences, Sensors, and Controllers work together to provide useful information to the user.\n\n## Intelligence\nA concept describing a source of information. This includes json files, databases, APIs, and more.\n\n## Sensor\nA Sidekick plugin that emits events. For example, the clipboard sensor emits an event every time the clipboard contents change.\n\n## Controller\nA Sidekick plugin that receives events from Sensors and emits whispers.\n\n## Whisper\nA notification emitted by controllers and displayed in the Sidekick sidebar.","pagesPluginParent":"Concepts / "}]};